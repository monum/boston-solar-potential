{"ast":null,"code":"import _defineProperty from \"/Users/nnamdiojibe/boston-solar-potential/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport Geocoder from 'react-mapbox-gl-geocoder';\nimport ReactMapGL from 'react-map-gl';\nconst REACT_APP_MAPBOX_TOKEN = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\nconst mapboxStyle = \"mapbox://styles/mapbox/satellite-v9\";\nexport default function Mapbox() {\n  _s();\n\n  const {\n    0: viewport,\n    1: setViewport\n  } = useState({\n    latitude: 42.360480980697226,\n    longitude: -71.05796084781304,\n    width: \"w-full\",\n    height: \"h-full\",\n    zoom: 10\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({}, viewport), {}, {\n      mapboxApiAccessToken: REACT_APP_MAPBOX_TOKEN,\n      mapStyle: mapboxStyle,\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapbox, \"rnHDt0n/Q+XPkZNuMcK2IM5rKm4=\");\n\n_c = Mapbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapbox\");","map":{"version":3,"sources":["/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js"],"names":["React","useRef","useEffect","useState","Geocoder","ReactMapGL","REACT_APP_MAPBOX_TOKEN","mapboxStyle","Mapbox","viewport","setViewport","latitude","longitude","width","height","zoom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,sBAAsB,GAAG,0FAA/B;AACA,MAAMC,WAAW,GAAG,qCAApB;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC;AACrCQ,IAAAA,QAAQ,EAAE,kBAD2B;AAErCC,IAAAA,SAAS,EAAE,CAAC,iBAFyB;AAGrCC,IAAAA,KAAK,EAAE,QAH8B;AAIrCC,IAAAA,MAAM,EAAE,QAJ6B;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CAAxC;AAUA,sBACI;AAAA,2BACI,QAAC,UAAD,kCACQN,QADR;AAEI,MAAA,oBAAoB,EAAIH,sBAF5B;AAGI,MAAA,QAAQ,EAAGC,WAHf;AAII,MAAA,gBAAgB,EACZE,QAAQ,IAAI;AACRC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH;AAPT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA5BuBD,M;;KAAAA,M","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport Geocoder from 'react-mapbox-gl-geocoder'; \nimport ReactMapGL from 'react-map-gl';\n\nconst REACT_APP_MAPBOX_TOKEN = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\"\nconst mapboxStyle = \"mapbox://styles/mapbox/satellite-v9\"\n\nexport default function Mapbox(){\n    const [viewport, setViewport] = useState({\n        latitude: 42.360480980697226,\n        longitude: -71.05796084781304,\n        width: \"w-full\",\n        height: \"h-full\",\n        zoom: 10\n        });\n\n    \n\n    return(\n        <div>\n            <ReactMapGL \n                {...viewport} \n                mapboxApiAccessToken = {REACT_APP_MAPBOX_TOKEN}\n                mapStyle= {mapboxStyle}\n                onViewportChange ={\n                    viewport => {\n                        setViewport(viewport);\n                    }\n                }\n            >\n\n            </ReactMapGL>\n        </div>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}