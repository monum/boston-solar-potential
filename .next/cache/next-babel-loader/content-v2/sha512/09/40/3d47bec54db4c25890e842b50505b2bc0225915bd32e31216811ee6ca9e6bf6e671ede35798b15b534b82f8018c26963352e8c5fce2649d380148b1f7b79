{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"!mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nmapboxgl.accessToken = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n  const {\n    0: lng,\n    1: setLng\n  } = useState(-71.0579);\n  const {\n    0: lat,\n    1: setLat\n  } = useState(42.3602);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(17); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      center: [lng, lat],\n      zoom: zoom,\n      scrollZoom: false\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container w-full h-full absolute content-center\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapboxGeocoder","accessToken","Map","mapContainerRef","lng","setLng","lat","setLat","zoom","setZoom","map","container","current","style","center","scrollZoom","addControl","NavigationControl","on","getCenter","toFixed","getZoom","remove"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA4B,4BAA5B;AACAD,QAAQ,CAACE,WAAT,GACE,0FADF;;AAGE,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,eAAe,GAAGP,MAAM,CAAC,IAAD,CAA9B;AACA,QAAM;AAAA,OAACQ,GAAD;AAAA,OAAMC;AAAN,MAAgBP,QAAQ,CAAC,CAAC,OAAF,CAA9B;AACA,QAAM;AAAA,OAACQ,GAAD;AAAA,OAAMC;AAAN,MAAgBT,QAAQ,CAAC,OAAD,CAA9B;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC,CAJgB,CAMhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,GAAG,GAAG,IAAIX,QAAQ,CAACG,GAAb,CAAiB;AAC3BS,MAAAA,SAAS,EAAER,eAAe,CAACS,OADA;AAE3BC,MAAAA,KAAK,EAAE,qCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAACV,GAAD,EAAME,GAAN,CAHmB;AAI3BE,MAAAA,IAAI,EAAEA,IAJqB;AAK3BO,MAAAA,UAAU,EAAE;AALe,KAAjB,CAAZ,CADc,CASd;;AACAL,IAAAA,GAAG,CAACM,UAAJ,CAAe,IAAIjB,QAAQ,CAACkB,iBAAb,EAAf,EAAiD,cAAjD;AAEAP,IAAAA,GAAG,CAACQ,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnBb,MAAAA,MAAM,CAACK,GAAG,CAACS,SAAJ,GAAgBf,GAAhB,CAAoBgB,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAb,MAAAA,MAAM,CAACG,GAAG,CAACS,SAAJ,GAAgBb,GAAhB,CAAoBc,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAX,MAAAA,OAAO,CAACC,GAAG,CAACW,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AACD,KAJD,EAZc,CAkBd;;AACA,WAAO,MAAMV,GAAG,CAACY,MAAJ,EAAb;AACD,GApBQ,EAoBN,EApBM,CAAT,CAPgB,CA2BR;;AAER,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAqE,MAAA,GAAG,EAAEnB;AAA1E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCD;;AAoCA,eAAeD,GAAf","sourcesContent":["import React, { useRef, useEffect, useState, } from \"react\";\nimport mapboxgl from \"!mapbox-gl\";\nimport MapboxGeocoder from  \"@mapbox/mapbox-gl-geocoder\";\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\n\n  const Map = () => {\n    const mapContainerRef = useRef(null);\n    const [lng, setLng] = useState(-71.0579);\n    const [lat, setLat] = useState(42.3602);\n    const [zoom, setZoom] = useState(17);\n  \n    // Initialize map when component mounts\n    useEffect(() => {\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/satellite-v9',\n        center: [lng, lat],\n        zoom: zoom,\n        scrollZoom: false,\n      });\n  \n      // Add navigation control (the +/- zoom buttons)\n      map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n  \n      map.on('move', () => {\n        setLng(map.getCenter().lng.toFixed(4));\n        setLat(map.getCenter().lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n  \n      // Clean up on unmount\n      return () => map.remove();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  \n    return (\n      <div>\n        <div className='map-container w-full h-full absolute content-center' ref={mapContainerRef} />\n      </div>\n    );\n  };\n  \n  export default Map;"]},"metadata":{},"sourceType":"module"}