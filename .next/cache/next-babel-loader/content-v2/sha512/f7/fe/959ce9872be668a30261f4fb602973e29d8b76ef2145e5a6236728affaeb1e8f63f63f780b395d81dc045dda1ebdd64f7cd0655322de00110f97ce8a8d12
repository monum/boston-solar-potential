{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nnamdiojibe/boston-solar-potential/components/SearchBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Component } from 'react'; //components\n\nconst token = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\nexport default function SearchBar() {\n  _s();\n\n  //Wait for the component to load before attempting to inject any data\n  useEffect(() => {\n    //listen to the input form for text being inserted\n    const search = document.getElementById(\"search\");\n    const matchList = document.getElementById(\"match-list\");\n\n    const searchBoston = async searchText => {\n      const res = await fetch('https://data.boston.gov/datastore/odata3.0/c4b7331e-e213-45a5-adda-052e4dd31d41?$format=json');\n      const data = await res.json();\n      const addresses = data.value;\n      let matches = addresses.filter(address => {\n        const regex = new RegExp(`^${searchText}`, 'gi');\n        return address.MAIL_ADDRESS.match(regex);\n      });\n\n      if (searchText.length == 0) {\n        matches = [];\n      }\n\n      ;\n      outputHTML(matches);\n    };\n\n    const outputHTML = matches => {\n      if (matches.length > 0) {\n        const html = matches.map(match => `\n            <a onClick={handleClickStreet} class=\" block w-96 border-b border-l text-gray-800 border-gray-200 bg-white hover:bg-gray-500\">\n            <p class=\"w-full text-left p-2 \"> ${match.MAIL_ADDRESS}, ${match.CITY} </p>\n            </a>\n            `).join('');\n        matchList.innerHTML = html;\n      } else {\n        const html = ``;\n        matchList.innerHTML = html;\n      }\n    };\n\n    search.addEventListener('input', () => searchBoston(search.value));\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    class: \"w-full mt-4 flex px-4 ml-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"search\",\n      class: \"w-full border-t mr-0 border-b border-l text-gray-800 border-gray-200 bg-white\",\n      placeholder: \"Enter Your Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"flex-none rounded-r bg-red-500  text-white font-bold p-4 uppercase border-t border-b border-r \",\n      children: \"Check My Roof\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} //search files and filter\n\n_s(SearchBar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/nnamdiojibe/boston-solar-potential/components/SearchBar/SearchBar.js"],"names":["React","useEffect","Component","token","SearchBar","search","document","getElementById","matchList","searchBoston","searchText","res","fetch","data","json","addresses","value","matches","filter","address","regex","RegExp","MAIL_ADDRESS","match","length","outputHTML","html","map","CITY","join","innerHTML","addEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,MAAMC,KAAK,GAAG,0FAAd;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACJ,UAAMI,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;;AAGA,UAAME,YAAY,GAAG,MAAMC,UAAN,IAAoB;AACrC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8FAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,YAAMC,SAAS,GAAGF,IAAI,CAACG,KAAvB;AAEA,UAAIC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiBC,OAAO,IAAI;AACtC,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGX,UAAW,EAA1B,EAA6B,IAA7B,CAAd;AAEA,eAAOS,OAAO,CAACG,YAAR,CAAqBC,KAArB,CAA2BH,KAA3B,CAAP;AACH,OAJa,CAAd;;AAMA,UAAGV,UAAU,CAACc,MAAX,IAAqB,CAAxB,EAA0B;AACtBP,QAAAA,OAAO,GAAG,EAAV;AACH;;AAAA;AAEDQ,MAAAA,UAAU,CAACR,OAAD,CAAV;AACH,KAhBD;;AAkBA,UAAMQ,UAAU,GAAGR,OAAO,IAAI;AAC1B,UAAGA,OAAO,CAACO,MAAR,GAAiB,CAApB,EAAsB;AAClB,cAAME,IAAI,GAAGT,OAAO,CAACU,GAAR,CAAYJ,KAAK,IAAK;AAC/C;AACA,gDAAgDA,KAAK,CAACD,YAAa,KAAIC,KAAK,CAACK,IAAK;AAClF;AACA,aAJyB,EAIVC,IAJU,CAIL,EAJK,CAAb;AAMArB,QAAAA,SAAS,CAACsB,SAAV,GAAsBJ,IAAtB;AACH,OARD,MAUI;AACA,cAAMA,IAAI,GAAI,EAAd;AACAlB,QAAAA,SAAS,CAACsB,SAAV,GAAsBJ,IAAtB;AACH;AACJ,KAfD;;AAiBArB,IAAAA,MAAM,CAAC0B,gBAAP,CAAwB,OAAxB,EAAiC,MAAKtB,YAAY,CAACJ,MAAM,CAACW,KAAR,CAAlD;AACH,GA1CY,CAAT;AA4CA,sBAEA;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC,+BAA/B;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AAA+B,MAAA,KAAK,EAAC,+EAArC;AAAqH,MAAA,WAAW,EAAC;AAAjI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,gGAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAWH,C,CAKD;;GA/DwBZ,S;;KAAAA,S","sourcesContent":["import React, {useEffect, Component } from 'react';\n//components\n\nconst token = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\"\n\n\nexport default function SearchBar() {\n    //Wait for the component to load before attempting to inject any data\n\n    useEffect(() => {\n        //listen to the input form for text being inserted\n    const search = document.getElementById(\"search\");\n    const matchList = document.getElementById(\"match-list\");\n    \n\n    const searchBoston = async searchText => {\n        const res = await fetch('https://data.boston.gov/datastore/odata3.0/c4b7331e-e213-45a5-adda-052e4dd31d41?$format=json');\n        const data = await res.json();\n        const addresses = data.value;\n    \n        let matches = addresses.filter(address => {\n            const regex = new RegExp(`^${searchText}`, 'gi');\n\n            return address.MAIL_ADDRESS.match(regex)\n        });\n    \n        if(searchText.length == 0){\n            matches = [];\n        };\n    \n        outputHTML(matches);\n    };\n    \n    const outputHTML = matches => {\n        if(matches.length > 0){\n            const html = matches.map(match => `\n            <a onClick={handleClickStreet} class=\" block w-96 border-b border-l text-gray-800 border-gray-200 bg-white hover:bg-gray-500\">\n            <p class=\"w-full text-left p-2 \"> ${match.MAIL_ADDRESS}, ${match.CITY} </p>\n            </a>\n            `).join('');\n    \n            matchList.innerHTML = html;\n        }\n\n        else{\n            const html = ``;\n            matchList.innerHTML = html;\n        }\n    }\n    \n    search.addEventListener('input', () =>searchBoston(search.value));\n});\n    \n    return (\n        \n    <form autoComplete=\"off\" class=\"w-full mt-4 flex px-4 ml-auto\">\n        <input type=\"text\" id=\"search\" class=\"w-full border-t mr-0 border-b border-l text-gray-800 border-gray-200 bg-white\" placeholder=\"Enter Your Address\"/>\n        <button class=\"flex-none rounded-r bg-red-500  text-white font-bold p-4 uppercase border-t border-b border-r \">\n            Check My Roof\n            </button>\n        \n</form>\n\n    );\n}\n\n\n\n\n//search files and filter\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}