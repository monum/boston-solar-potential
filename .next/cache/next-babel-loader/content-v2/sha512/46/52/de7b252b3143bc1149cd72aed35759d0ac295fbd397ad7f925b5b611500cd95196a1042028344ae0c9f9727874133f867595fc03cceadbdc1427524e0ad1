{"ast":null,"code":"import _defineProperty from \"/Users/nnamdiojibe/boston-solar-potential/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\nconst accessToken = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\nexport default function Map() {\n  _s();\n\n  const {\n    0: viewport,\n    1: setViewport\n  } = useState({\n    latitude: 42.4211,\n    longitude: -71.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10,\n    scrollZoom: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Geocoder, {\n      mapboxApiAccessToken: accessToken,\n      onSelected: this.onSelected,\n      viewport: viewport,\n      hideOnSelect: true,\n      queryParams: queryParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({}, viewport), {}, {\n      mapboxApiAccessToken: accessToken,\n      mapStyle: \"mapbox://styles/mapbox/satellite-v9\",\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"xe+mwzS6d82EzjNL+x3W7qj6ZmA=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/nnamdiojibe/boston-solar-potential/components/Maps/MapboxMap.js"],"names":["React","useRef","useEffect","useState","ReactMapGL","Geocoder","accessToken","Map","viewport","setViewport","latitude","longitude","width","height","zoom","scrollZoom","onSelected","queryParams"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,MAAMC,WAAW,GAAG,0FAApB;AAEE,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC;AACvCO,IAAAA,QAAQ,EAAE,OAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,OAF2B;AAGvCC,IAAAA,KAAK,EAAE,OAHgC;AAIvCC,IAAAA,MAAM,EAAE,OAJ+B;AAKvCC,IAAAA,IAAI,EAAE,EALiC;AAMvCC,IAAAA,UAAU,EAAE;AAN2B,GAAD,CAAxC;AAYA,sBACE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,oBAAoB,EAAET,WADxB;AACqC,MAAA,UAAU,EAAE,KAAKU,UADtD;AACkE,MAAA,QAAQ,EAAER,QAD5E;AACsF,MAAA,YAAY,EAAE,IADpG;AAEY,MAAA,WAAW,EAAES;AAFzB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD,kCACMT,QADN;AAEE,MAAA,oBAAoB,EAAEF,WAFxB;AAGE,MAAA,QAAQ,EAAC,qCAHX;AAIE,MAAA,gBAAgB,EAAEE,QAAQ,IAAI;AAC5BC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD;AANH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCuBD,G;;KAAAA,G","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport ReactMapGL from \"react-map-gl\"\nimport Geocoder from 'react-mapbox-gl-geocoder';\n\nconst accessToken = \"pk.eyJ1Ijoibm9qaWJlIiwiYSI6ImNrcHloOXg1OTA0M3cyb21uYW83d2V3MGwifQ.GlZLAGPrDIf1lihGKJIBqw\";\n\n  export default function Map() {\n    \n    const [viewport, setViewport] = useState({\n      latitude: 42.4211,\n      longitude: -71.6903,\n      width: \"100vw\",\n      height: \"100vh\",\n      zoom: 10,\n      scrollZoom: false,\n    });\n    \n  \n\n  \n    return (\n      <div>\n        <Geocoder\n          mapboxApiAccessToken={accessToken} onSelected={this.onSelected} viewport={viewport} hideOnSelect={true}\n                    queryParams={queryParams}\n                />\n\n        <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken={accessToken}\n          mapStyle=\"mapbox://styles/mapbox/satellite-v9\"\n          onViewportChange={viewport => {\n            setViewport(viewport);\n          }}\n        >\n          \n          \n        </ReactMapGL>\n      </div>\n    );\n  }\n \n  \n"]},"metadata":{},"sourceType":"module"}